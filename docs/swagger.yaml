definitions:
  controller.ChangeStatusInput:
    properties:
      blocked:
        type: boolean
    type: object
  controller.HealthResponse:
    properties:
      creation_date:
        type: string
      description:
        type: string
      last_response:
        type: string
    type: object
  model.InterestsRule:
    properties:
      enabled:
        type: boolean
    type: object
  model.ProximityRule:
    properties:
      enabled:
        type: boolean
      radius:
        type: integer
    type: object
  model.Training:
    properties:
      blocked:
        type: boolean
      description:
        type: string
      id:
        type: integer
      score:
        type: string
      severity:
        type: integer
      title:
        type: string
      trainer_id:
        type: integer
      type:
        type: string
      type_id:
        type: integer
    type: object
info:
  contact: {}
  description: Recommendation microservice for FiuFit's backend.
  title: Recommendation Microservice API
  version: "1.0"
paths:
  /:
    get:
      description: Returns a 200 code and JSON with a message.
      responses:
        "200":
          description: OK
      summary: Check the service's status.
  /health:
    get:
      description: Returns a 200 code and JSON with the date the service started running
        and a description.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.HealthResponse'
      summary: Get the service's health status.
  /recommended:
    get:
      description: Get recommended trainings according to current ruleset.
      parameters:
      - description: Proximity rule changes
        in: header
        name: user_info
        required: true
        type: string
      - description: Title of the training
        in: query
        name: title
        type: string
      - description: ID of the training owner
        in: query
        name: trainer_id
        type: integer
      - description: ID of the training type
        in: query
        name: type_id
        type: integer
      - description: Severity of the training
        in: query
        name: severity
        type: integer
      - description: Whether the training is blocked
        in: query
        name: blocked
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Training'
            type: array
        "500":
          description: Internal Server Error
        "503":
          description: Service Unavailable
      summary: Get recommended trainings according to current ruleset.
      tags:
      - Recommendations
  /recommended/rules/interests:
    get:
      description: Get the current settings of the interests rule.
      parameters:
      - description: Proximity rule changes
        in: header
        name: user_info
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.InterestsRule'
        "500":
          description: Internal Server Error
      summary: Get the current settings of the interests rule.
      tags:
      - Interests Rule
    patch:
      consumes:
      - application/json
      description: Update the interests rule' status for recommended trainings.
      parameters:
      - description: Proximity rule changes
        in: header
        name: user_info
        required: true
        type: string
      - description: Interests rule changes
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/model.InterestsRule'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update the interests rule' status for recommended trainings.
      tags:
      - Interests Rule
  /recommended/rules/proximity:
    get:
      description: Get the current settings of the proximity rule.
      parameters:
      - description: Proximity rule changes
        in: header
        name: user_info
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProximityRule'
        "500":
          description: Internal Server Error
      summary: Get the current settings of the proximity rule.
      tags:
      - Proximity Rule
    patch:
      consumes:
      - application/json
      description: Update the maximum radius for recommended trainings.
      parameters:
      - description: Proximity rule changes
        in: header
        name: user_info
        required: true
        type: string
      - description: Proximity rule changes
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/model.ProximityRule'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update the maximum radius for recommended trainings.
      tags:
      - Proximity Rule
  /status:
    get:
      description: Get the status of the service.
      parameters:
      - description: Decoded payload of the admin token
        in: header
        name: user_info
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ChangeStatusInput'
      summary: Get the service's blocked status.
    post:
      consumes:
      - application/json
      description: Changes the status of the service.
      parameters:
      - description: Decoded payload of the admin token
        in: header
        name: user_info
        required: true
        type: string
      - description: Blocked status of the service
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/controller.ChangeStatusInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ChangeStatusInput'
      summary: Change the service's blocked status.
swagger: "2.0"
